{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\cvascong\\\\Documents\\\\Projetos pessoais\\\\Rocketseat\\\\NextLevelWeek\\\\MoveItNLW\\\\src\\\\contexts\\\\ChallengesContext.tsx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { createContext, useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nimport { LevelUpModal } from '../components/LevelUpModal';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  let {\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  const {\n    0: level,\n    1: setLevel\n  } = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0);\n  const {\n    0: isLevelModalOpen,\n    1: setIsLevelModalOpen\n  } = useState(false);\n  const {\n    0: activeChallenge,\n    1: setActiveChallenge\n  } = useState(null);\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  navigator.serviceWorker.register('sw.js');\n  useEffect(() => {\n    Notification.requestPermission();\n  }, []);\n  useEffect(() => {\n    Cookies.set('level', level.toString());\n    Cookies.set('currentExperience', currentExperience.toString());\n    Cookies.set('challengesCompleted', challengesCompleted.toString());\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n    setIsLevelModalOpen(true);\n  }\n\n  function closeLevelUpModal() {\n    setIsLevelModalOpen(false);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      navigator.serviceWorker.ready.then(function (registration) {\n        registration.showNotification('Novo desafio ðŸŽ‰', {\n          body: 'Valendo ${challenge.amount}xp!'\n        });\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) return;\n    const {\n      amount\n    } = activeChallenge;\n    let finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      currentExperience,\n      experienceToNextLevel,\n      challengesCompleted,\n      activeChallenge,\n      levelUp,\n      startNewChallenge,\n      resetChallenge,\n      completeChallenge,\n      closeLevelUpModal\n    },\n    children: [children, isLevelModalOpen && /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/cvascong/Documents/Projetos pessoais/Rocketseat/NextLevelWeek/MoveItNLW/src/contexts/ChallengesContext.tsx"],"names":["createContext","useEffect","useState","Cookies","challenges","LevelUpModal","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","isLevelModalOpen","setIsLevelModalOpen","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","navigator","serviceWorker","register","Notification","requestPermission","set","toString","levelUp","closeLevelUpModal","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","ready","then","registration","showNotification","body","resetChallenge","completeChallenge","amount","finalExperience"],"mappings":"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","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport challenges from '../../challenges.json';\r\nimport { LevelUpModal } from '../components/LevelUpModal';\r\n\r\ninterface Challenge {\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\ninterface ChallengesContextData {\r\n    level: number;\r\n    currentExperience: number;\r\n    experienceToNextLevel: number;\r\n    challengesCompleted: number;\r\n    activeChallenge: Challenge;\r\n    levelUp: () => void;\r\n    startNewChallenge: () => void;\r\n    resetChallenge: () => void;\r\n    completeChallenge: () => void;\r\n    closeLevelUpModal: () => void;\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n    level: number;\r\n    currentExperience: number;\r\n    challengesCompleted: number;\r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\nexport function ChallengesProvider({ children, ...rest }: ChallengesProviderProps) {\r\n    const [level, setLevel] = useState(rest.level ?? 1);\r\n    const [currentExperience, setCurrentExperience] = useState(rest.currentExperience ?? 0);\r\n    const [challengesCompleted, setChallengesCompleted] = useState(rest.challengesCompleted ?? 0);\r\n    const [isLevelModalOpen, setIsLevelModalOpen] = useState(false);\r\n\r\n    const [activeChallenge, setActiveChallenge] = useState(null);\r\n\r\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\r\n\r\n    navigator.serviceWorker.register('sw.js');\r\n\r\n    useEffect(() => {\r\n        Notification.requestPermission();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        Cookies.set('level', level.toString());\r\n        Cookies.set('currentExperience', currentExperience.toString());\r\n        Cookies.set('challengesCompleted', challengesCompleted.toString());\r\n    }, [level, currentExperience, challengesCompleted])\r\n\r\n    function levelUp() {\r\n        setLevel(level + 1);\r\n        setIsLevelModalOpen(true);\r\n    }\r\n\r\n    function closeLevelUpModal() {\r\n        setIsLevelModalOpen(false);\r\n    }\r\n\r\n    function startNewChallenge() {\r\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\r\n        const challenge = challenges[randomChallengeIndex];\r\n\r\n        setActiveChallenge(challenge);\r\n\r\n        new Audio('/notification.mp3').play();\r\n\r\n        if(Notification.permission === 'granted') {\r\n            navigator.serviceWorker.ready.then(function(registration) {\r\n                registration.showNotification('Novo desafio ðŸŽ‰', {\r\n                  body: 'Valendo ${challenge.amount}xp!'\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    function resetChallenge() {\r\n        setActiveChallenge(null);\r\n    }\r\n\r\n    function completeChallenge() {\r\n        if(!activeChallenge)\r\n            return;\r\n        \r\n        const { amount } = activeChallenge;\r\n\r\n        let finalExperience= currentExperience + amount;\r\n\r\n        if(finalExperience >= experienceToNextLevel) {\r\n            finalExperience = finalExperience - experienceToNextLevel;\r\n            levelUp();\r\n        }\r\n\r\n        setCurrentExperience(finalExperience);\r\n        setActiveChallenge(null);\r\n        setChallengesCompleted(challengesCompleted + 1);\r\n\r\n    }\r\n\r\n    return (\r\n        <ChallengesContext.Provider\r\n            value={{ \r\n                level, \r\n                currentExperience,\r\n                experienceToNextLevel,\r\n                challengesCompleted,\r\n                activeChallenge,\r\n                levelUp,\r\n                startNewChallenge,\r\n                resetChallenge,\r\n                completeChallenge,\r\n                closeLevelUpModal,\r\n            }}\r\n        >\r\n            {children}\r\n\r\n            { isLevelModalOpen && <LevelUpModal />}\r\n        </ChallengesContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}