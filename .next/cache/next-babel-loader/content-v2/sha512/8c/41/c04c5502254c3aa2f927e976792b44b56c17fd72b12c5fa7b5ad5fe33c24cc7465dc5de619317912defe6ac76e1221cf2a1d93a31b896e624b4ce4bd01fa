{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"C:/Users/cvascong/Documents/Projetos pessoais/Rocketseat/NextLevelWeek/MoveItNLW/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\cvascong\\\\Documents\\\\Projetos pessoais\\\\Rocketseat\\\\NextLevelWeek\\\\MoveItNLW\\\\src\\\\contexts\\\\ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nimport { LevelUpModal } from '../components/LevelUpModal';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(false),\n      isLevelModalOpen = _useState4[0],\n      setIsLevelModalOpen = _useState4[1];\n\n  var _useState5 = useState(null),\n      activeChallenge = _useState5[0],\n      setActiveChallenge = _useState5[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', level.toString());\n    Cookies.set('currentExperience', currentExperience.toString());\n    Cookies.set('challengesCompleted', challengesCompleted.toString());\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n    setIsLevelModalOpen(true);\n  }\n\n  function closeLevelUpModal() {\n    setIsLevelModalOpen(false);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === 'granted') {\n      navigator.serviceWorker.ready.then(function (registration) {\n        registration.showNotification('Novo desafio ðŸŽ‰', {\n          body: 'Valendo ${challenge.amount}xp!'\n        });\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) return;\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      experienceToNextLevel: experienceToNextLevel,\n      challengesCompleted: challengesCompleted,\n      activeChallenge: activeChallenge,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      resetChallenge: resetChallenge,\n      completeChallenge: completeChallenge,\n      closeLevelUpModal: closeLevelUpModal\n    },\n    children: [children, isLevelModalOpen && /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"MjsMtg5BIPrFPe/oYfapvBe28Eo=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["C:/Users/cvascong/Documents/Projetos pessoais/Rocketseat/NextLevelWeek/MoveItNLW/src/contexts/ChallengesContext.tsx"],"names":["createContext","useEffect","useState","Cookies","challenges","LevelUpModal","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","isLevelModalOpen","setIsLevelModalOpen","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","set","toString","levelUp","closeLevelUpModal","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","navigator","serviceWorker","ready","then","registration","showNotification","body","resetChallenge","completeChallenge","amount","finalExperience"],"mappings":"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","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport challenges from '../../challenges.json';\r\nimport { LevelUpModal } from '../components/LevelUpModal';\r\n\r\ninterface Challenge {\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\ninterface ChallengesContextData {\r\n    level: number;\r\n    currentExperience: number;\r\n    experienceToNextLevel: number;\r\n    challengesCompleted: number;\r\n    activeChallenge: Challenge;\r\n    levelUp: () => void;\r\n    startNewChallenge: () => void;\r\n    resetChallenge: () => void;\r\n    completeChallenge: () => void;\r\n    closeLevelUpModal: () => void;\r\n}\r\n\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n    level: number;\r\n    currentExperience: number;\r\n    challengesCompleted: number;\r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\nexport function ChallengesProvider({ children, ...rest }: ChallengesProviderProps) {\r\n    const [level, setLevel] = useState(rest.level ?? 1);\r\n    const [currentExperience, setCurrentExperience] = useState(rest.currentExperience ?? 0);\r\n    const [challengesCompleted, setChallengesCompleted] = useState(rest.challengesCompleted ?? 0);\r\n    const [isLevelModalOpen, setIsLevelModalOpen] = useState(false);\r\n\r\n    const [activeChallenge, setActiveChallenge] = useState(null);\r\n\r\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\r\n\r\n    useEffect(() => {\r\n        Notification.requestPermission();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        Cookies.set('level', level.toString());\r\n        Cookies.set('currentExperience', currentExperience.toString());\r\n        Cookies.set('challengesCompleted', challengesCompleted.toString());\r\n    }, [level, currentExperience, challengesCompleted])\r\n\r\n    function levelUp() {\r\n        setLevel(level + 1);\r\n        setIsLevelModalOpen(true);\r\n    }\r\n\r\n    function closeLevelUpModal() {\r\n        setIsLevelModalOpen(false);\r\n    }\r\n\r\n    function startNewChallenge() {\r\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\r\n        const challenge = challenges[randomChallengeIndex];\r\n\r\n        setActiveChallenge(challenge);\r\n\r\n        new Audio('/notification.mp3').play();\r\n\r\n        if(Notification.permission === 'granted') {\r\n            navigator.serviceWorker.ready.then(function(registration) {\r\n                registration.showNotification('Novo desafio ðŸŽ‰', {\r\n                  body: 'Valendo ${challenge.amount}xp!'\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    function resetChallenge() {\r\n        setActiveChallenge(null);\r\n    }\r\n\r\n    function completeChallenge() {\r\n        if(!activeChallenge)\r\n            return;\r\n        \r\n        const { amount } = activeChallenge;\r\n\r\n        let finalExperience= currentExperience + amount;\r\n\r\n        if(finalExperience >= experienceToNextLevel) {\r\n            finalExperience = finalExperience - experienceToNextLevel;\r\n            levelUp();\r\n        }\r\n\r\n        setCurrentExperience(finalExperience);\r\n        setActiveChallenge(null);\r\n        setChallengesCompleted(challengesCompleted + 1);\r\n\r\n    }\r\n\r\n    return (\r\n        <ChallengesContext.Provider\r\n            value={{ \r\n                level, \r\n                currentExperience,\r\n                experienceToNextLevel,\r\n                challengesCompleted,\r\n                activeChallenge,\r\n                levelUp,\r\n                startNewChallenge,\r\n                resetChallenge,\r\n                completeChallenge,\r\n                closeLevelUpModal,\r\n            }}\r\n        >\r\n            {children}\r\n\r\n            { isLevelModalOpen && <LevelUpModal />}\r\n        </ChallengesContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}